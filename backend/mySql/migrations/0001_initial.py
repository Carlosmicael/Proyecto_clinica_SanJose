# Generated by Django 4.2.16 on 2024-12-04 03:17

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'especialidad',
            },
        ),
        migrations.CreateModel(
            name='Especialista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('servicios', models.TextField(blank=True, null=True)),
                ('especialidades', models.ManyToManyField(related_name='especialistas', to='mySql.especialidad')),
            ],
            options={
                'db_table': 'especialista',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='usuarios', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuarios_permissions', to='auth.permission')),
            ],
            options={
                'db_table': 'usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horas_disponibles', models.TimeField()),
                ('horas_citas', models.TimeField()),
                ('fecha', models.DateField()),
                ('especialistas', models.ManyToManyField(related_name='horarios', to='mySql.especialista')),
            ],
            options={
                'db_table': 'horario',
            },
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('cedula', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=254)),
                ('edificio', models.CharField(max_length=100)),
                ('consultorio', models.CharField(max_length=100)),
                ('inicio', models.DateTimeField()),
                ('fin', models.DateTimeField()),
                ('especialidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='mySql.especialidad')),
                ('especialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='mySql.especialista')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='mySql.usuario')),
            ],
            options={
                'db_table': 'cita',
            },
        ),
    ]
